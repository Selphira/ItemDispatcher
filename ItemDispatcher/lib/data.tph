DEFINE_ACTION_MACRO ~data#load~
BEGIN
    LAM ~data#load#creatures~
    LAM ~data#load#items~
    //LAM ~data#load#stores~
END

/*
 * Crée des tableaux pour chaque type de filtre supporté à partir des données des créatures du jeu.
 *
 * Tableau contenant le nombre de créatures correspondant au filtre
 *   $group_count_cre_foo(~bar~) = 2
 *
 * - $group_count_cre_kits(~%kit_name%~)
 * - $group_count_cre_generals(~%general_name%~)
 * - $group_count_cre_races(~%race_name%~)
 * - $group_count_cre_classes(~%class_name%~)
 * - $group_count_cre_specifics(~%specific_name%~)
 * - $group_count_cre_genders(~%gender_name%~)
 * - $group_count_cre_alignments(~%alignment_name%~)
 * - $group_count_cre_levels(~%level%~)
 * - $group_count_itm_armor_types(~%armor_type%~)
 * - $group_count_itm_categories(~%category_name%~)
 * - group_count_itm_magical
 * - group_count_itm_weapons
 * - group_count_itm_two_handed
 *
 * Liste des emplacements occupés par un objet non droppable ou qui ne devrait pas être déplacé/remplacé
 * - $~group_cre_locked_slot_%slot_name%~(~%creature%~)
 *
 * Liste des emplacements d'inventaire vides de chaque créature
 * - $empty_inventory_slots(~%creature%~)
 *
 * Tableau contenant la liste des créatures correspondant au filtre
 *   $~group_cre_foo%bar%~(~0~) ~creature1~
 *
 * - $~group_cre_kit_%kit_name%~(~%index%~) ~%creature%~
 * - $~group_cre_general_%general_name%~(~%index%~) ~%creature%~
 * - $~group_cre_race_%race_name%~(~%index%~) ~%creature%~
 * - $~group_cre_class_%class_name%~(~%index%~) ~%creature%~
 * - $~group_cre_specific_%specific_name%~(~%index%~) ~%creature%~
 * - $~group_cre_gender_%gender_name%~(~%index%~) ~%creature%~
 * - $~group_cre_alignment_%alignment_name%~(~%index%~) ~%creature%~
 * - $~group_cre_level_%level%~(~%index%~) ~%creature%~
 * - $~group_itm_armor_type_%armor_type%~(~%index%~) ~%item%~
 * - $~group_itm_category_%category_name%~(~%index%~) ~%item%~
 * - $group_itm_magical(~%group_magical%~) ~%item%~
 * - $group_itm_weapon(~%group_weapons%~) ~%item%~
 * - $group_itm_two_handed(~%group_two_handed%~) ~%item%~
 */
DEFINE_ACTION_MACRO ~data#load#creatures~
BEGIN
    LAF ~data#load#ids~ STR_VAR file = ~kit~ RET_ARRAY group_count_cre_kits = array END
    LAF ~data#load#ids~ STR_VAR file = ~general~ RET_ARRAY group_count_cre_generals = array END
    LAF ~data#load#ids~ STR_VAR file = ~race~ RET_ARRAY group_count_cre_races = array END
    LAF ~data#load#ids~ STR_VAR file = ~class~ RET_ARRAY group_count_cre_classes = array END
    LAF ~data#load#ids~ STR_VAR file = ~specific~ RET_ARRAY group_count_cre_specifics = array END
    LAF ~data#load#ids~ STR_VAR file = ~gender~ RET_ARRAY group_count_cre_genders = array END
    LAF ~data#load#ids~ STR_VAR file = ~alignmen~ RET_ARRAY group_count_cre_alignments = array END
    LAF ~data#load#levels~ RET_ARRAY group_count_cre_levels END

	COPY_EXISTING_REGEXP GLOB ~^yusef.cre$~ ~override~
	//COPY_EXISTING_REGEXP GLOB ~^.+\.cre$~ ~override~
	    SPRINT ~creature~ ~%SOURCE_FILE%~

		READ_BYTE  0x234 level
		READ_SHORT 0x246 kit
		READ_BYTE  0x271 general
		READ_BYTE  0x272 race
		READ_BYTE  0x273 class
		READ_BYTE  0x274 specific
		READ_BYTE  0x275 gender
		READ_BYTE  0x27b alignment
		READ_LONG  0x2b8 slot_offset
		READ_LONG  0x2bc item_offset
		READ_LONG  0x2c0 item_count

		LOOKUP_IDS_SYMBOL_OF_INT kit_name ~kit~ kit
		LOOKUP_IDS_SYMBOL_OF_INT general_name ~general~ general
		LOOKUP_IDS_SYMBOL_OF_INT race_name ~race~ race
		LOOKUP_IDS_SYMBOL_OF_INT class_name ~class~ class
		LOOKUP_IDS_SYMBOL_OF_INT specific_name ~specific~ specific
		LOOKUP_IDS_SYMBOL_OF_INT gender_name ~gender~ gender
		LOOKUP_IDS_SYMBOL_OF_INT alignment_name ~alignmen~ alignment

		TO_LOWER creature
		TO_LOWER kit_name
		TO_LOWER general_name
		TO_LOWER race_name
		TO_LOWER class_name
		TO_LOWER specific_name
		TO_LOWER gender_name
		TO_LOWER alignment_name

		PATCH_IF NOT VARIABLE_IS_SET $group_count_cre_kits(~%kit_name%~) BEGIN
		    PATCH_IF kit != 0 BEGIN
		        LPF ~log#add_warning~ STR_VAR message = ~%creature% : Invalid kit value (%kit%)~ END
		    END
		    SPRINT ~kit_name~ ~none~
		END

		PATCH_IF NOT VARIABLE_IS_SET $group_count_cre_generals(~%general_name%~) BEGIN
		    PATCH_IF general != 0 BEGIN
		        LPF ~log#add_warning~ STR_VAR message = ~%creature% : Invalid general value (%general%)~ END
		    END
		    SPRINT ~general_name~ ~none~
		END

		PATCH_IF NOT VARIABLE_IS_SET $group_count_cre_races(~%race_name%~) BEGIN
		    PATCH_IF race != 0 BEGIN
		        LPF ~log#add_warning~ STR_VAR message = ~%creature% : Invalid race value (%race%)~ END
		    END
		    SPRINT ~race_name~ ~none~
		END

		PATCH_IF NOT VARIABLE_IS_SET $group_count_cre_classes(~%class_name%~) BEGIN
		    PATCH_IF class != 0 BEGIN
		        LPF ~log#add_warning~ STR_VAR message = ~%creature% : Invalid class value (%class%)~ END
		    END
		    SPRINT ~class_name~ ~none~
		END

		PATCH_IF NOT VARIABLE_IS_SET $group_count_cre_specifics(~%specific_name%~) BEGIN
		    PATCH_IF specific != 0 BEGIN
		        LPF ~log#add_warning~ STR_VAR message = ~%creature% : Invalid specific value (%specific%)~ END
		    END
		    SPRINT ~specific_name~ ~none~
		END

		PATCH_IF NOT VARIABLE_IS_SET $group_count_cre_genders(~%gender_name%~) BEGIN
		    PATCH_IF gender != 0 BEGIN
		        LPF ~log#add_warning~ STR_VAR message = ~%creature% : Invalid gender value (%gender%)~ END
		    END
		    SPRINT ~gender_name~ ~none~
		END

		PATCH_IF NOT VARIABLE_IS_SET $group_count_cre_alignments(~%alignment_name%~) BEGIN
		    PATCH_IF alignment != 0 BEGIN
		        LPF ~log#add_warning~ STR_VAR message = ~%creature% : Invalid alignment value (%alignment%)~ END
		    END
		    SPRINT ~alignment_name~ ~none~
		END

        SET index = $group_count_cre_kits(~%kit_name%~)
        SET $group_count_cre_kits(~%kit_name%~) += 1
        SPRINT $~group_cre_kit_%kit_name%~(~%index%~) ~%creature%~

        SET index = $group_count_cre_generals(~%general_name%~)
        SET $group_count_cre_generals(~%general_name%~) += 1
        SPRINT $~group_cre_general_%general_name%~(~%index%~) ~%creature%~

        SET index = $group_count_cre_races(~%race_name%~)
        SET $group_count_cre_races(~%race_name%~) += 1
        SPRINT $~group_cre_race_%race_name%~(~%index%~) ~%creature%~

        SET index = $group_count_cre_classes(~%class_name%~)
        SET $group_count_cre_classes(~%class_name%~) += 1
        SPRINT $~group_cre_class_%class_name%~(~%index%~) ~%creature%~

        SET index = $group_count_cre_specifics(~%specific_name%~)
        SET $group_count_cre_specifics(~%specific_name%~) += 1
        SPRINT $~group_cre_specific_%specific_name%~(~%index%~) ~%creature%~

        SET index = $group_count_cre_genders(~%gender_name%~)
        SET $group_count_cre_genders(~%gender_name%~) += 1
        SPRINT $~group_cre_gender_%gender_name%~(~%index%~) ~%creature%~

        SET index = $group_count_cre_alignments(~%alignment_name%~)
        SET $group_count_cre_alignments(~%alignment_name%~) += 1
        SPRINT $~group_cre_alignment_%alignment_name%~(~%index%~) ~%creature%~

        SET index = $group_count_cre_levels(~%level%~)
        SET $group_count_cre_levels(~%level%~) += 1
        SPRINT $~group_cre_level_%level%~(~%index%~) ~%creature%~

        PATCH_PHP_EACH ~item_slots~ AS offset => slot_name BEGIN
            READ_SHORT (%slot_offset% + (%offset% * 0x02)) slot
            PATCH_IF (%slot% != 0xffff) BEGIN
                READ_ASCII (item_offset + slot * 0x14) resref
                READ_LONG (item_offset + 0x10 + (slot * 0x14)) creItemFlags

                SET droppable = (creItemFlags BAND BIT3) == 0

                PATCH_IF droppable BEGIN
                    INNER_ACTION BEGIN
                        ACTION_IF FILE_EXISTS_IN_GAME ~%resref%.itm~ BEGIN
                            COPY_EXISTING ~%resref%.itm~ ~~
                                READ_SHORT  0x18 itemFlags
                                READ_STRREF 0x50 originalUnidentifiedDescription
                                READ_LONG   0x50 originalUnidentifiedDescriptionRef
                                READ_STRREF 0x54 originalDescription
                                READ_LONG   0x54 originalDescriptionRef

                                SET droppable = (itemFlags BAND BIT2) != 0
                                PATCH_IF droppable AND (~%originalDescription%~ STRING_EQUAL ~~ OR originalDescriptionRef <= 0) AND (~%originalUnidentifiedDescription%~ STRING_EQUAL ~~ OR originalUnidentifiedDescriptionRef <= 0) BEGIN
                                    SET droppable = 0
                                END
                            BUT_ONLY
                        END
                    END
                END

                PATCH_IF NOT droppable BEGIN
                    SET $~group_cre_locked_slot_%slot_name%~(~%creature%~) = 1
                END
            END
        END

        SET empty_inventory_slots = 16
        FOR (offset = 1; offset <= 16; ++offset) BEGIN
            READ_SHORT (%slot_offset% + ((%offset% + 20) * 0x02)) slot
            PATCH_IF (%slot% != 0xffff) BEGIN
                SET empty_inventory_slots -= 1
            END
        END
        SET $empty_inventory_slots(~%creature%~) = empty_inventory_slots
	BUT_ONLY
END

DEFINE_ACTION_MACRO ~data#load#items~
BEGIN
    LAF ~data#load#ids~ STR_VAR file = ~itemcat~ RET_ARRAY group_count_itm_categories = array END
    LAF ~data#load#armor_types~  RET_ARRAY group_count_itm_armor_types END
    LAF ~data#load#enchantments~ RET_ARRAY group_count_itm_enchantments END

    OUTER_SET group_count_itm_cursed     = 0
    OUTER_SET group_count_itm_magical    = 0
    OUTER_SET group_count_itm_two_handed = 0
    OUTER_SET group_count_itm_weapons    = 0

	COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
	    SPRINT ~item~ ~%SOURCE_FILE%~

		READ_LONG  0x18 flags
		READ_SHORT 0x1c category
		READ_ASCII 0x22 animation (2)
		READ_ASCII 0x60 enchantment

		LOOKUP_IDS_SYMBOL_OF_INT category_name ~itemcat~ category

		LPF ~data#load#armor_type~ STR_VAR animation RET armor_type END
        LPF ~data#load#is_weapon~ STR_VAR category RET is_weapon END

        TO_LOWER category_name

		SET twohanded = (flags BAND BIT1) != 0
		SET cursed    = (flags BAND BIT4) != 0
		SET magical   = (flags BAND BIT6) != 0

        PATCH_IF NOT ~%armor_type%~ STRING_EQUAL ~~ BEGIN
            SET ~index~ = $group_count_itm_armor_types(~%armor_type%~)
            SET $group_count_itm_armor_types(~%armor_type%~) += 1
            SPRINT $~group_itm_armor_type_%armor_type%~(~%index%~) ~%item%~
        END

        PATCH_IF VARIABLE_IS_SET $group_count_itm_categories(~%category_name%~) BEGIN
            SET ~index~ = $group_count_itm_categories(~%category_name%~)
            SET $group_count_itm_categories(~%category_name%~) += 1
            SPRINT $~group_itm_category_%category_name%~(~%index%~) ~%item%~
        END

        PATCH_IF magical == 1 BEGIN
            SPRINT $group_itm_magical(~%group_magical%~) ~%item%~
            SET group_count_itm_magical += 1
        END

        PATCH_IF cursed == 1 BEGIN
            SPRINT $group_itm_cursed(~%group_count_itm_cursed%~) ~%item%~
            SET group_count_itm_cursed += 1
        END

        PATCH_IF is_weapon BEGIN
            SPRINT $group_itm_weapon(~%group_weapons%~) ~%item%~
            SET group_count_itm_weapons += 1
            PATCH_IF twohanded == 1 BEGIN
                SPRINT $group_itm_two_handed(~%group_two_handed%~) ~%item%~
                SET group_count_itm_two_handed += 1
            END
        END
	BUT_ONLY
END

DEFINE_ACTION_FUNCTION ~data#load#ids~
    STR_VAR
        file = ~~
    RET_ARRAY
        array
BEGIN
    ACTION_CLEAR_ARRAY  ~array~
    ACTION_DEFINE_ARRAY ~array~ BEGIN END

    COPY_EXISTING ~%file%.ids~ ~override~
        READ_2DA_ENTRIES_NOW ~rows~ 2

        SET $array(~none~) = 0

        FOR (row = 0; row < rows; ++row) BEGIN
            READ_2DA_ENTRY_FORMER ~rows~ row 0 id
            READ_2DA_ENTRY_FORMER ~rows~ row 1 name

		    TO_LOWER name

            PATCH_IF NOT (~%id%~ STRING_EQUAL ~IDS~ OR ~%name%~ STRING_EQUAL ~~) BEGIN
                SET $array(~%name%~) = 0
            END
        END
    BUT_ONLY
END

DEFINE_ACTION_FUNCTION ~data#load#levels~
    RET_ARRAY
        group_count_cre_levels
BEGIN
    ACTION_DEFINE_ARRAY ~group_count_cre_levels~ BEGIN END
    OUTER_FOR (level = 0; level < 50; ++level) BEGIN
        OUTER_SET $group_count_cre_levels(~%level%~) = 0
    END
END

DEFINE_ACTION_FUNCTION ~data#load#armor_types~
    RET_ARRAY
        group_count_itm_armor_types
BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY ~group_count_itm_armor_types~ BEGIN
        ~robe~          => 0
        ~leather~       => 0
        ~chainmail~     => 0
        ~platemail~     => 0
        ~buckler~       => 0
        ~small_shield~  => 0
        ~medium_shield~ => 0
        ~large_shield~  => 0
    END
END

DEFINE_ACTION_FUNCTION ~data#load#enchantments~
    RET_ARRAY
        group_count_itm_enchantments
BEGIN
    ACTION_DEFINE_ASSOCIATIVE_ARRAY ~group_count_itm_enchantments~ BEGIN
        0 => 0
        1 => 0
        2 => 0
        3 => 0
        4 => 0
        5 => 0
        6 => 0
    END
END

DEFINE_PATCH_FUNCTION ~data#load#armor_type~
    STR_VAR
        animation = ~~
    RET
        armor_type
BEGIN
    PATCH_MATCH ~%animation%~
    WITH
        ~2W~ ~3W~ ~4W~ BEGIN SPRINT ~armor_type~ ~robe~ END
        ~2A~   BEGIN SPRINT ~armor_type~ ~leather~ END
        ~3A~   BEGIN SPRINT ~armor_type~ ~chainmail~ END
        ~4A~   BEGIN SPRINT ~armor_type~ ~platemail~ END
        ~D1~   BEGIN SPRINT ~armor_type~ ~buckler~ END
        ~D2~   BEGIN SPRINT ~armor_type~ ~small_shield~ END
        ~D3~   BEGIN SPRINT ~armor_type~ ~medium_shield~ END
        ~D4~   BEGIN SPRINT ~armor_type~ ~large_shield~ END
        DEFAULT SPRINT ~armor_type~ ~~
    END
END

DEFINE_PATCH_FUNCTION ~data#load#is_weapon~
    INT_VAR
        category = 0
    RET
        is_weapon
BEGIN
    SET is_weapon = (category >= 0xf AND category <= 0x1e)
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY ~item_slots~ BEGIN
     0 => ~helmet~
     1 => ~armor~
     2 => ~shield~
     3 => ~gloves~
     4 => ~left_ring~
     5 => ~right_ring~
     6 => ~amulet~
     7 => ~belt~
     8 => ~boots~
     9 => ~weapon1~
    10 => ~weapon2~
    11 => ~weapon3~
    12 => ~weapon4~
    13 => ~quiver1~
    14 => ~quiver2~
    15 => ~quiver3~
    16 => ~quiver4~
    17 => ~cloak~
    18 => ~quick_item1~
    19 => ~quick_item2~
    20 => ~quick_item3~
END