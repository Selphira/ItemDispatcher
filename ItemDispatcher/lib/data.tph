DEFINE_ACTION_MACRO ~data#load~
BEGIN
    PRINT ~Chargement des créatures...~ SILENT
    LAM ~data#load#creatures~
    PRINT ~Chargement des objets...~ SILENT
    LAM ~data#load#items~
    PRINT ~Chargement des magasins...~ SILENT
    LAM ~data#load#stores~
    PRINT ~Chargement des zones...~ SILENT
    LAM ~data#load#areas~
END

/*
 * Crée des tableaux pour chaque type de filtre supporté à partir des données des créatures du jeu.
 *
 * Tableau contenant le nombre de créatures correspondant au filtre
 * - $group_count(~group_cre_all~)
 * - $group_count(~group_cre_kit_%kit_name%~)
 * - $group_count(~group_cre_general_%general_name%~)
 * - $group_count(~group_cre_race_%race_name%~)
 * - $group_count(~group_cre_class_%class_name%~)
 * - $group_count(~group_cre_specific_%specific_name%~)
 * - $group_count(~group_cre_gender_%gender_name%~)
 * - $group_count(~group_cre_alignment_%alignment_name%~)
 * - $group_count(~group_cre_level_%level%~)
 *
 * Tableau contenant la liste des créatures correspondant au filtre
 * - $group_cre_all(~%creature%~) = 1
 * - $~group_cre_kit_%kit_name%~(~%creature%~) = 1
 * - $~group_cre_general_%general_name%~(~%creature%~) = 1
 * - $~group_cre_race_%race_name%~(~%creature%~) = 1
 * - $~group_cre_class_%class_name%~(~%creature%~) = 1
 * - $~group_cre_specific_%specific_name%~(~%creature%~) = 1
 * - $~group_cre_gender_%gender_name%~(~%creature%~) = 1
 * - $~group_cre_alignment_%alignment_name%~(~%creature%~) = 1
 * - $~group_cre_level_%level%~(~%creature%~) = 1
 *
 * Liste des emplacements occupés par un objet non droppable ou qui ne devrait pas être déplacé/remplacé
 * - $~cre_locked_slot_%slot_name%~(~%creature%~)
 *
 * Liste des emplacements d'inventaire vides de chaque créature
 * - $group_cre_empty_inventory_slots(~%creature%~)
 */
DEFINE_ACTION_MACRO ~data#load#creatures~
BEGIN
    LAF ~data#load#ids~ STR_VAR file = ~kit~      group = ~cre_kit~         RET_ARRAY group_count END
    LAF ~data#load#ids~ STR_VAR file = ~general~  group = ~cre_general~     RET_ARRAY group_count END
    LAF ~data#load#ids~ STR_VAR file = ~race~     group = ~cre_race~        RET_ARRAY group_count END
    LAF ~data#load#ids~ STR_VAR file = ~class~    group = ~cre_class~       RET_ARRAY group_count END
    LAF ~data#load#ids~ STR_VAR file = ~specific~ group = ~cre_specific~    RET_ARRAY group_count END
    LAF ~data#load#ids~ STR_VAR file = ~gender~   group = ~cre_gender~      RET_ARRAY group_count END
    LAF ~data#load#ids~ STR_VAR file = ~alignmen~ group = ~cre_alignment~   RET_ARRAY group_count END
    LAF ~data#load#ids~ STR_VAR file = ~wprof~    group = ~cre_proficiency~ RET_ARRAY group_count END
    LAF ~data#load#ability_scores~ RET_ARRAY group_count END
    LAF ~data#load#empty_inventory_slots~ RET_ARRAY group_count END
    LAF ~data#load#levels~ RET_ARRAY group_count END
    LAF ~data#load#locked_slots~ RET_ARRAY group_count END

    OUTER_SET $group_count(~group_cre_all~) = 0

	COPY_EXISTING_REGEXP GLOB ~^.+\.cre$~ ~override~
	    SPRINT ~creature~ ~%SOURCE_FILE%~
	    TO_LOWER creature

        LPM ~data#load#creatures#data~
        LPM ~data#load#creatures#slots~
        LPM ~data#load#creatures#proficiencies~
	BUT_ONLY
END

DEFINE_PATCH_MACRO ~data#load#creatures#data~
BEGIN
    READ_BYTE  0x234 level
    READ_BYTE  0x238 strength
    READ_BYTE  0x23a intelligence
    READ_BYTE  0x23b wisdom
    READ_BYTE  0x23c dexterity
    READ_BYTE  0x23d constitution
    READ_BYTE  0x23e charisma
    READ_SHORT 0x246 kit
    READ_BYTE  0x271 general
    READ_BYTE  0x272 race
    READ_BYTE  0x273 class
    READ_BYTE  0x274 specific
    READ_BYTE  0x275 gender
    READ_BYTE  0x27b alignment
    READ_ASCII 0x2cc dialog

    LOOKUP_IDS_SYMBOL_OF_INT kit_name ~kit~ kit
    LOOKUP_IDS_SYMBOL_OF_INT general_name ~general~ general
    LOOKUP_IDS_SYMBOL_OF_INT race_name ~race~ race
    LOOKUP_IDS_SYMBOL_OF_INT class_name ~class~ class
    LOOKUP_IDS_SYMBOL_OF_INT specific_name ~specific~ specific
    LOOKUP_IDS_SYMBOL_OF_INT gender_name ~gender~ gender
    LOOKUP_IDS_SYMBOL_OF_INT alignment_name ~alignmen~ alignment

    TO_LOWER kit_name
    TO_LOWER general_name
    TO_LOWER race_name
    TO_LOWER class_name
    TO_LOWER specific_name
    TO_LOWER gender_name
    TO_LOWER alignment_name
    TO_LOWER dialog

    PATCH_IF NOT VARIABLE_IS_SET $group_count(~group_cre_kit_%kit_name%~) BEGIN
        PATCH_IF kit != 0 BEGIN
            LPF ~log#add#warning~ STR_VAR message = ~%creature% : Invalid kit value (%kit%)~ END
        END
        SPRINT ~kit_name~ ~none~
    END

    PATCH_IF NOT VARIABLE_IS_SET $group_count(~group_cre_general_%general_name%~) BEGIN
        PATCH_IF general != 0 BEGIN
            LPF ~log#add#warning~ STR_VAR message = ~%creature% : Invalid general value (%general%)~ END
        END
        SPRINT ~general_name~ ~none~
    END

    PATCH_IF NOT VARIABLE_IS_SET $group_count(~group_cre_race_%race_name%~) BEGIN
        PATCH_IF race != 0 BEGIN
            LPF ~log#add#warning~ STR_VAR message = ~%creature% : Invalid race value (%race%)~ END
        END
        SPRINT ~race_name~ ~none~
    END

    PATCH_IF NOT VARIABLE_IS_SET $group_count(~group_cre_class_%class_name%~) BEGIN
        PATCH_IF class != 0 BEGIN
            LPF ~log#add#warning~ STR_VAR message = ~%creature% : Invalid class value (%class%)~ END
        END
        SPRINT ~class_name~ ~none~
    END

    PATCH_IF NOT VARIABLE_IS_SET $group_count(~group_cre_specific_%specific_name%~) BEGIN
        PATCH_IF specific != 0 BEGIN
            LPF ~log#add#warning~ STR_VAR message = ~%creature% : Invalid specific value (%specific%)~ END
        END
        SPRINT ~specific_name~ ~none~
    END

    PATCH_IF NOT VARIABLE_IS_SET $group_count(~group_cre_gender_%gender_name%~) BEGIN
        PATCH_IF gender != 0 BEGIN
            LPF ~log#add#warning~ STR_VAR message = ~%creature% : Invalid gender value (%gender%)~ END
        END
        SPRINT ~gender_name~ ~none~
    END

    PATCH_IF NOT VARIABLE_IS_SET $group_count(~group_cre_alignment_%alignment_name%~) BEGIN
        PATCH_IF alignment != 0 BEGIN
            LPF ~log#add#warning~ STR_VAR message = ~%creature% : Invalid alignment value (%alignment%)~ END
        END
        SPRINT ~alignment_name~ ~none~
    END

    SET $group_cre_all(~%creature%~) = 1
    SET $group_count(~group_cre_all~) += 1

    SET $~group_cre_kit_%kit_name%~(~%creature%~) = 1
    SET $group_count(~group_cre_kit_%kit_name%~) += 1

    SET $~group_cre_general_%general_name%~(~%creature%~) = 1
    SET $group_count(~group_cre_general_%general_name%~) += 1

    SET $~group_cre_race_%race_name%~(~%creature%~) = 1
    SET $group_count(~group_cre_race_%race_name%~) += 1

    SET $~group_cre_class_%class_name%~(~%creature%~) = 1
    SET $group_count(~group_cre_class_%class_name%~) += 1

    SET $~group_cre_specific_%specific_name%~(~%creature%~) = 1
    SET $group_count(~group_cre_specific_%specific_name%~) += 1

    SET $~group_cre_gender_%gender_name%~(~%creature%~) = 1
    SET $group_count(~group_cre_gender_%gender_name%~) += 1

    SET $~group_cre_alignment_%alignment_name%~(~%creature%~) = 1
    SET $group_count(~group_cre_alignment_%alignment_name%~) += 1

    SET $~group_cre_level_%level%~(~%creature%~) = 1
    SET $group_count(~group_cre_level_%level%~) += 1

    SET $~group_cre_strength_%strength%~(~%creature%~) = 1
    SET $group_count(~group_cre_strength_%strength%~) += 1

    SET $~group_cre_intelligence_%intelligence%~(~%creature%~) = 1
    SET $group_count(~group_cre_intelligence_%intelligence%~) += 1

    SET $~group_cre_wisdom_%wisdom%~(~%creature%~) = 1
    SET $group_count(~group_cre_wisdom_%wisdom%~) += 1

    SET $~group_cre_dexterity_%dexterity%~(~%creature%~) = 1
    SET $group_count(~group_cre_dexterity_%dexterity%~) += 1

    SET $~group_cre_constitution_%constitution%~(~%creature%~) = 1
    SET $group_count(~group_cre_constitution_%constitution%~) += 1

    SET $~group_cre_charisma_%charisma%~(~%creature%~) = 1
    SET $group_count(~group_cre_charisma_%charisma%~) += 1

    SET $~cre_dialog_%dialog%~(~%creature%~) = 1
    SET $~dlg_creature_%creature%~(~%dialog%~) = 1
END

DEFINE_PATCH_MACRO ~data#load#creatures#slots~
BEGIN
    READ_LONG  0x2b8 slot_offset
    READ_LONG  0x2bc item_offset

    PATCH_PHP_EACH ~item_slots~ AS offset => slot_name BEGIN
        READ_SHORT (%slot_offset% + (%offset% * 0x02)) slot
        PATCH_IF (%slot% != 0xffff) BEGIN
            READ_ASCII (item_offset + (slot * 0x14)) resref
            READ_LONG  (item_offset + (slot * 0x14) + 0x10) creItemFlags

            SET droppable = (creItemFlags BAND BIT3) == 0

            PATCH_IF droppable BEGIN
                INNER_ACTION BEGIN
                    ACTION_IF FILE_EXISTS_IN_GAME ~%resref%.itm~ BEGIN
                        COPY_EXISTING ~%resref%.itm~ ~~
                            READ_SHORT  0x18 itemFlags
                            READ_STRREF 0x50 originalUnidentifiedDescription
                            READ_LONG   0x50 originalUnidentifiedDescriptionRef
                            READ_STRREF 0x54 originalDescription
                            READ_LONG   0x54 originalDescriptionRef

                            SET droppable = (itemFlags BAND BIT2) != 0
                            PATCH_IF droppable AND (~%originalDescription%~ STRING_EQUAL ~~ OR originalDescriptionRef <= 0) AND (~%originalUnidentifiedDescription%~ STRING_EQUAL ~~ OR originalUnidentifiedDescriptionRef <= 0) BEGIN
                                SET droppable = 0
                            END
                        BUT_ONLY
                    END
                END
            END

            PATCH_IF NOT droppable BEGIN
                INNER_PATCH_SAVE ~slot_name~ ~%slot_name%~ BEGIN REPLACE_TEXTUALLY ~[0-9]+$~ ~~ END
                SET $~group_cre_locked_slot_%slot_name%~(~%creature%~) = 1
                SET $group_count(~group_cre_locked_slot_%slot_name%~) += 1
            END
        END
    END

    SET empty_inventory_slot = 16

    FOR (offset = 1; offset <= 16; ++offset) BEGIN
        READ_SHORT (%slot_offset% + ((%offset% + 20) * 0x02)) slot
        PATCH_IF (%slot% != 0xffff) BEGIN
            SET empty_inventory_slot -= 1
        END
    END

    SET $group_cre_empty_inventory_slots(~%creature%~) = empty_inventory_slot
    SET $group_count(~group_cre_empty_inventory_slots_%empty_inventory_slot%~) += 1
END

DEFINE_PATCH_MACRO ~data#load#creatures#proficiencies~
BEGIN
    LOCAL_SET has_proficiency = 0
    READ_BYTE 0x33  version
    READ_LONG 0x2c4 effect_offset
    READ_LONG 0x2c8 effect_count
    FOR (index = 0 ; index < effect_count ; ++index) BEGIN
        SET index_offset = effect_offset + ((0x30 + (version * 0xd8)) * index)
        READ_SHORT ((version * 0x08) + index_offset + 0x00) opcode
        PATCH_IF opcode = 233 BEGIN
            READ_SHORT ((version * 0x10) + index_offset + 0x04) stars
            READ_SHORT ((version * 0x10) + index_offset + 0x08) proficiency

            LOOKUP_IDS_SYMBOL_OF_INT proficiency_name ~wprof~ proficiency
            TO_LOWER proficiency_name

            PATCH_IF VARIABLE_IS_SET $group_count(~group_cre_proficiency_%proficiency_name%~) BEGIN
                SET $~group_cre_proficiency_%proficiency_name%~(~%creature%~) = stars
                SET $group_count(~group_cre_proficiency_%proficiency_name%~) += 1
                SET has_proficiency = 1
            END
        END
    END
    PATCH_IF has_proficiency == 0 BEGIN
        SET $group_cre_proficiency_none(~%creature%~) = 1
        SET $group_count(~group_cre_proficiency_none~) += 1
    END
END

/*
 * Crée des tableaux pour chaque type de filtre supporté à partir des données des objets du jeu.
 *
 * Tableau contenant le nombre d'objets correspondant au filtre
 * - $group_count(~group_itm_all~)
 * - $group_count(~group_itm_armor_type_%armor_type%~)
 * - $group_count(~group_itm_category_%category_name%~)
 * - $group_count(~group_itm_cursed~)
 * - $group_count(~group_itm_enchantment_%enchantment%~)
 * - $group_count(~group_itm_magical~)
 * - $group_count(~group_itm_movable~)
 * - $group_count(~group_itm_slot_%slot_type%~)
 * - $group_count(~group_itm_stackable~)
 * - $group_count(~group_itm_two_handed~)
 *
 * Tableau contenant la liste d'objets correspondant au filtre
 * - $group_itm_all(~%item%~) = 1
 * - $~group_itm_armor_type_%armor_type%~(~%item%~) = 1
 * - $~group_itm_category_%category_name%~(~%item%~) = 1
 * - $~group_itm_enchantment_%enchantment%~(~%item%~) = 1
 * - $~group_itm_slot_%slot_type%~(~%item%~) = 1
 * - $group_itm_cursed(~%item%~) = 1
 * - $group_itm_magical(~%item%~) = 1
 * - $group_itm_movable(~%item%~) = 1
 * - $group_itm_stackable(~%item%~) = 1
 * - $group_itm_two_handed(~%item%~) = 1
 */
DEFINE_ACTION_MACRO ~data#load#items~
BEGIN
    LAF ~data#load#ids~ STR_VAR file = ~itemcat~ group = ~itm_category~ RET_ARRAY group_count END
    LAF ~data#load#slots~  RET_ARRAY group_count END
    LAF ~data#load#armor_types~  RET_ARRAY group_count END
    LAF ~data#load#enchantments~ RET_ARRAY group_count END
    LAF ~data#load#scrolls~ RET_ARRAY group_count END

    OUTER_SET $group_count(~group_itm_all~)        = 0
    OUTER_SET $group_count(~group_itm_cursed~)     = 0
    OUTER_SET $group_count(~group_itm_magical~)    = 0
    OUTER_SET $group_count(~group_itm_movable~)    = 0
    OUTER_SET $group_count(~group_itm_stackable~)  = 0
    OUTER_SET $group_count(~group_itm_two_handed~) = 0

	COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
	    SPRINT ~item~ ~%SOURCE_FILE%~
	    TO_LOWER item

		READ_LONG  0x18 flags
		READ_SHORT 0x1c category
		READ_ASCII 0x22 animation (2)
		READ_SHORT 0x38 stack_size
		READ_SHORT 0x60 enchantment
		//TODO: Créer meta-groupe avec proficiency !!

		LOOKUP_IDS_SYMBOL_OF_INT category_name ~itemcat~ category

        TO_LOWER category_name

		LPF ~data#load#armor_type~ STR_VAR animation RET armor_type END
        LPF ~data#load#is_weapon~ STR_VAR category RET is_weapon END
        LPF ~data#load#slot_type~ INT_VAR category RET slot_type END

		SET twohanded = (flags BAND BIT1) != 0
		SET movable   = (flags BAND BIT2) != 0
		SET cursed    = (flags BAND BIT4) != 0
		SET magical   = (flags BAND BIT6) != 0
		SET stackable = stack_size > 1

        SET $group_itm_all(~%item%~) = 1
        SET $group_count(~group_itm_all~) += 1

        PATCH_IF NOT ~%armor_type%~ STRING_EQUAL ~~ BEGIN
            SET $~group_itm_armor_type_%armor_type%~(~%item%~) = 1
            SET $group_count(~group_itm_armor_type_%armor_type%~) += 1
        END

        PATCH_IF VARIABLE_IS_SET $group_count(~group_itm_category_%category_name%~) BEGIN
            SET $~group_itm_category_%category_name%~(~%item%~) = 1
            SET $group_count(~group_itm_category_%category_name%~) += 1
        END

        PATCH_IF VARIABLE_IS_SET $group_count(~group_itm_slot_%slot_type%~) BEGIN
            SET $~group_itm_slot_%slot_type%~(~%item%~) = 1
            SET $group_count(~group_itm_slot_%slot_type%~) += 1
        END

        PATCH_IF magical == 1 BEGIN
            SET $group_itm_magical(~%item%~) = 1
            SET $group_count(~group_itm_magical~) += 1
        END

        PATCH_IF movable == 1 BEGIN
            SET $group_itm_movable(~%item%~) = 1
            SET $group_count(~group_itm_movable~) += 1
        END

        PATCH_IF cursed == 1 BEGIN
            SET $group_itm_cursed(~%item%~) = 1
            SET $group_count(~group_itm_cursed~) += 1
        END

        PATCH_IF stackable == 1 BEGIN
            SET $group_itm_stackable(~%item%~) = 1
            SET $group_count(~group_itm_stackable~) += 1
        END

        PATCH_IF enchantment >= 0 AND enchantment <= 6 BEGIN
            SET $~group_itm_enchantment_%enchantment%~(~%item%~) = 1
            SET $group_count(~group_itm_enchantment_%enchantment%~) += 1
        END

        PATCH_IF is_weapon AND twohanded == 1 BEGIN
            SET $group_itm_two_handed(~%item%~) = 1
            SET $group_count(~group_itm_two_handed~) += 1
        END

        PATCH_IF category == 0xb BEGIN // scroll
            LPF ~data#load#itm_scroll_informations~ RET found spell_level spell_school END
            PATCH_IF found BEGIN
                SET $~group_itm_scroll_%spell_level%~(~%item%~) = 1
                SET $group_count(~group_itm_scroll_%spell_level%~) += 1

                SET $~group_itm_scroll_%spell_school%~(~%item%~) = 1
                SET $group_count(~group_itm_scroll_%spell_school%~) += 1
            END
        END
	BUT_ONLY
END

/*
 * Tableau contenant le nombre de stores correspondant au filtre
 * - $group_count(~group_sto_all~)
 * - $group_count(~group_sto_purchase_%category_name%~)
 * - $group_count(~group_sto_type_%store_type_name%~)
 *
 * Tableau contenant la liste de stores correspondant au filtre
 * - $group_sto_all(~%store%~) = 1
 * - $~group_sto_purchase_%category_name%~(~%store%~) = 1
 * - $~group_sto_type_%store_type_name%~(~%store%~) = 1
 */
DEFINE_ACTION_MACRO ~data#load#stores~
BEGIN
    LAF ~data#load#ids~ STR_VAR file = ~itemcat~ group = ~sto_purchase~ RET_ARRAY group_count END
    LAF ~data#load#store_types~ RET_ARRAY group_count END

    OUTER_SET $group_count(~group_sto_all~) = 0

	COPY_EXISTING_REGEXP GLOB ~^.+\.sto$~ ~override~
	    SPRINT ~store~ ~%SOURCE_FILE%~
	    TO_LOWER store

	    READ_LONG 0x8  store_type
        READ_LONG 0x2c purchased_offset
        READ_LONG 0x30 purchased_count

        SET $group_sto_all(~%store%~) = 1
        SET $group_count(~group_sto_all~) += 1

        SPRINT store_type_name $store_types(~%store_type%~)

        PATCH_IF VARIABLE_IS_SET $group_count(~group_sto_type_%store_type_name%~) BEGIN
            SET $~group_sto_type_%store_type_name%~(~%store%~) = 1
            SET $group_count(~group_sto_type_%store_type_name%~) += 1
        END

        FOR (index = 0 ; index < purchased_count ; ++index) BEGIN
            READ_LONG (purchased_offset + (index * 0x04)) category

            LOOKUP_IDS_SYMBOL_OF_INT category_name ~itemcat~ category

            TO_LOWER category_name

            PATCH_IF VARIABLE_IS_SET $group_count(~group_sto_purchase_%category_name%~) BEGIN
                SET $~group_sto_purchase_%category_name%~(~%store%~) = 1
                SET $group_count(~group_sto_purchase_%category_name%~) += 1
            END
        END
	BUT_ONLY

	COPY_EXISTING_REGEXP GLOB ~^.+\.dlg~ ~override~
        COUNT_REGEXP_INSTANCES ~StartStore("\([^"]+\)"~ count_stores
	    PATCH_IF count_stores > 0 BEGIN
            SPRINT ~dialog~ ~%SOURCE_RES%~

            TO_LOWER dialog

            READ_LONG 0x28 actions_offsets
            READ_LONG 0x2c actions_number
            FOR (index = actions_number - 1; index >= 0; --index) BEGIN
                SET action_offset = actions_offsets + (index * 8)
                READ_LONG action_offset scripts_offsets
                READ_LONG (action_offset + 4) scripts_length
                READ_ASCII scripts_offsets script (scripts_length)

                SET pos = INDEX(CASE_SENSITIVE EXACT_MATCH ~StartStore(~ ~%script%~)
                PATCH_IF (pos >= 0) BEGIN
                    SET pos2 = INDEX(~[,)]~ ~%script%~ pos)
                    PATCH_IF (pos2 > pos) BEGIN
                        LPF SUBSTRING INT_VAR start = pos length = pos2 - pos STR_VAR string = EVAL ~%script%~ RET substring END
                        INNER_PATCH_SAVE store ~%substring%~ BEGIN
                            REPLACE_TEXTUALLY ~StartStore("\([^"]+\)".*~ ~\1~
                        END
                        PHP_EACH ~cre_dialog_%dialog%~ AS creature => _ BEGIN
                            SET $~sto_creature_%creature%~(~%store%.sto~) = 1
                        END
                    END
                END
            END
	    END
	BUT_ONLY
END

/*
 * Tableau contenant le nombre de créatures de la zone
 * - $group_count(~group_are_%area%_cre~)
 * Tableau contenant le nombre de magasins de la zone
 * - $group_count(~group_are_%area%_sto~)
 *
 * Tableau contenant la liste des créatures de la zone
 * - $group_are_%area%_cre(~%creature%~) = 1
 * Tableau contenant la liste des magasins de la zone
 * - $group_are_%area%_sto(~%store%~) = 1
 */
DEFINE_ACTION_MACRO ~data#load#areas~
BEGIN
	COPY_EXISTING_REGEXP GLOB ~^.+\.are$~ ~override~
	    SPRINT ~area~ ~%SOURCE_RES%~
	    TO_LOWER area

        SET $group_count(~group_are_%area%~) = 0
        SET $group_count(~group_are_%area%_cre~) = 0
        SET $group_count(~group_are_%area%_sto~) = 0

        // Les acteurs
	    GET_OFFSET_ARRAY creature_offsets ARE_V10_ACTORS
        PHP_EACH creature_offsets AS actor_num => creature_offset BEGIN
            READ_ASCII creature_offset + 0x80 creature
	        TO_LOWER creature
	        SPRINT creature ~%creature%.cre~

            PATCH_IF NOT VARIABLE_IS_SET $~group_are_%area%_cre~(~%creature%~) BEGIN
                SET $~group_are_%area%_cre~(~%creature%~) = 1
                SET $group_count(~group_are_%area%_cre~) += 1
                SET $~group_are_%area%~(~%creature%~) = 1
                SET $group_count(~group_are_%area%~) += 1
            END
        END

        // Les points d'apparition
	    GET_OFFSET_ARRAY spawn_offsets ARE_V10_SPAWN_POINTS
        PHP_EACH spawn_offsets AS spawn_num => spawn_offset BEGIN
            FOR (index = 0; index < 10; ++index) BEGIN
                READ_ASCII spawn_offset + 0x24 + (index * 8) creature
                PATCH_IF STRING_LENGTH ~%creature%~ > 0 BEGIN
	                TO_LOWER creature
	                SPRINT creature ~%creature%.cre~
                    PATCH_IF NOT VARIABLE_IS_SET $~group_are_%area%_cre~(~%creature%~) BEGIN
                        SET $~group_are_%area%_cre~(~%creature%~) = 1
                        SET $group_count(~group_are_%area%_cre~) += 1
                        SET $~group_are_%area%~(~%creature%~) = 1
                        SET $group_count(~group_are_%area%~) += 1
                    END
                END
            END
        END

        // Les magasins
        PHP_EACH ~group_are_%area%_cre~ AS creature => _ BEGIN
            PHP_EACH ~sto_creature_%creature%~ AS store => _ BEGIN
                PATCH_IF NOT VARIABLE_IS_SET $~group_are_%area%_sto~(~%store%~) BEGIN
                    SET $~group_are_%area%_sto~(~%store%~) = 1
                    SET $group_count(~group_are_%area%_sto~) += 1
                    SET $~group_are_%area%~(~%store%~) = 1
                    SET $group_count(~group_are_%area%~) += 1
                END
            END
        END

        // Les conteneurs
		GET_OFFSET_ARRAY container_offsets ARE_V10_CONTAINERS
		PHP_EACH container_offsets AS container_num => container_offset BEGIN
			//READ_ASCII cont_off cont_name
			GET_OFFSET_ARRAY2 item_offsets container_offset ARE_V10_ITEMS
            PHP_EACH item_offsets AS item_num => item_offset BEGIN
                // TODO: Charger les conteneurs
            END
        END
	BUT_ONLY
END

DEFINE_ACTION_FUNCTION ~data#load#ids~
    STR_VAR
        file = ~~
        group = ~~
    RET_ARRAY
        group_count
BEGIN
    COPY_EXISTING ~%file%.ids~ ~override~
        READ_2DA_ENTRIES_NOW ~rows~ 2

        SET $group_count(~group_%group%_none~) = 0

        FOR (row = 0; row < rows; ++row) BEGIN
            READ_2DA_ENTRY_FORMER ~rows~ row 0 id
            READ_2DA_ENTRY_FORMER ~rows~ row 1 name

		    TO_LOWER name

            PATCH_IF NOT (~%id%~ STRING_EQUAL ~IDS~ OR ~%name%~ STRING_EQUAL ~~) BEGIN
                SET $group_count(~group_%group%_%name%~) = 0
            END
        END
    BUT_ONLY
END

DEFINE_ACTION_FUNCTION ~data#load#levels~
    RET_ARRAY
        group_count
BEGIN
    OUTER_FOR (level = 0; level < 50; ++level) BEGIN
        OUTER_SET $group_count(~group_cre_level_%level%~) = 0
    END
END

DEFINE_ACTION_FUNCTION ~data#load#locked_slots~
    RET_ARRAY
        group_count
BEGIN
    ACTION_PHP_EACH item_slots AS _ => slot_name BEGIN
        OUTER_PATCH_SAVE ~slot_name~ ~%slot_name%~ BEGIN REPLACE_TEXTUALLY ~[0-9]+$~ ~~ END
        OUTER_SET $group_count(~group_cre_locked_slot_%slot_name%~) = 0
    END
END

DEFINE_ACTION_FUNCTION ~data#load#empty_inventory_slots~
    RET_ARRAY
        group_count
BEGIN
	OUTER_FOR (empty_inventory_slot = 0; empty_inventory_slot <= 16; ++empty_inventory_slot) BEGIN
        OUTER_SET $group_count(~group_cre_empty_inventory_slots_%empty_inventory_slot%~) = 0
    END
END

DEFINE_ACTION_FUNCTION ~data#load#ability_scores~
    RET_ARRAY
        group_count
BEGIN
    ACTION_FOR_EACH ability_score IN ~strength~ ~intelligence~ ~wisdom~ ~dexterity~ ~constitution~ ~charisma~ BEGIN
        OUTER_FOR (value = 1; value <= 25; ++value) BEGIN
            OUTER_SET $group_count(~group_cre_%ability_score%_%value%~) = 0
        END
    END
END

DEFINE_ACTION_FUNCTION ~data#load#armor_types~
    RET_ARRAY
        group_count
BEGIN
    ACTION_FOR_EACH armor_type IN ~robe~ ~leather~ ~chainmail~ ~platemail~ ~buckler~ ~small_shield~ ~medium_shield~ ~large_shield~ BEGIN
        OUTER_SET $group_count(~group_itm_armor_type_%armor_type%~) = 0
    END
END

DEFINE_ACTION_FUNCTION ~data#load#slots~
    RET_ARRAY
        group_count
BEGIN
    ACTION_FOR_EACH slot_type IN ~helmet~ ~armor~ ~shield~ ~gloves~ ~left_ring~ ~right_ring~ ~amulet~ ~belt~ ~boots~ ~weapon~ ~quiver~ ~cloak~ ~quick_item~ BEGIN
        OUTER_SET $group_count(~group_itm_slot_%slot_type%~) = 0
    END
END

DEFINE_ACTION_FUNCTION ~data#load#store_types~
    RET_ARRAY
        group_count
BEGIN
    ACTION_PHP_EACH store_types AS _ => store_type BEGIN
        OUTER_SET $group_count(~group_sto_type_%store_type%~) = 0
    END
END

DEFINE_ACTION_FUNCTION ~data#load#enchantments~
    RET_ARRAY
        group_count
BEGIN
    OUTER_FOR (enchantment = 0; enchantment <= 6; ++enchantment) BEGIN
        OUTER_SET $group_count(~group_itm_enchantment_%enchantment%~) = 0
    END
END

DEFINE_ACTION_FUNCTION ~data#load#scrolls~
    RET_ARRAY
        group_count
BEGIN
    OUTER_FOR (spell_level = 0; spell_level <= 9; ++spell_level) BEGIN
        OUTER_SET $group_count(~group_itm_scroll_%spell_level%~) = 0
    END

    ACTION_PHP_EACH spell_schools AS _ => spell_school BEGIN
        OUTER_SET $group_count(~group_itm_scroll_%spell_school%~) = 0
    END
END

DEFINE_PATCH_FUNCTION ~data#load#armor_type~
    STR_VAR
        animation = ~~
    RET
        armor_type
BEGIN
    PATCH_MATCH ~%animation%~
    WITH
        ~2W~ ~3W~ ~4W~ BEGIN SPRINT ~armor_type~ ~robe~ END
        ~2A~   BEGIN SPRINT ~armor_type~ ~leather~ END
        ~3A~   BEGIN SPRINT ~armor_type~ ~chainmail~ END
        ~4A~   BEGIN SPRINT ~armor_type~ ~platemail~ END
        ~D1~   BEGIN SPRINT ~armor_type~ ~buckler~ END
        ~D2~   BEGIN SPRINT ~armor_type~ ~small_shield~ END
        ~D3~   BEGIN SPRINT ~armor_type~ ~medium_shield~ END
        ~D4~   BEGIN SPRINT ~armor_type~ ~large_shield~ END
        DEFAULT SPRINT ~armor_type~ ~~
    END
END

DEFINE_PATCH_FUNCTION ~data#load#is_weapon~
    INT_VAR
        category = 0
    RET
        is_weapon
BEGIN
    SET is_weapon = (category >= 0xf AND category <= 0x1e)
END

DEFINE_PATCH_FUNCTION ~data#load#slot_type~
    INT_VAR
        category = 0
    RET
        slot_type
BEGIN
    SPRINT slot_type ~~
    PATCH_IF VARIABLE_IS_SET $item_category_to_item_slot(~%category%~) BEGIN
        SET index = $item_category_to_item_slot(~%category%~)
        SPRINT slot_type $item_slots(~%index%~)
    END
    INNER_PATCH_SAVE ~slot_type~ ~%slot_type%~ BEGIN REPLACE_TEXTUALLY ~[0-9]+$~ ~~ END
END

DEFINE_PATCH_FUNCTION ~data#load#cre_item_slot~
    INT_VAR
        category = 0
    RET
        cre_item_slot
BEGIN
    SPRINT cre_item_slot ~~
    PATCH_IF VARIABLE_IS_SET $item_category_to_item_slot(~%category%~) BEGIN
        SET index = $item_category_to_item_slot(~%category%~)
        SPRINT cre_item_slot $cre_item_slots(~%index%~)
    END
END

DEFINE_PATCH_FUNCTION ~data#load#itm_scroll_informations~
    RET
        found
        spell_level
        spell_school
BEGIN
    SET found = 0
    SPRINT spell_level ~~
    SPRINT spell_school ~~

    GET_OFFSET_ARRAY headerOffsets ITM_V10_HEADERS
    PHP_EACH headerOffsets AS _ => headerOffset BEGIN
        GET_OFFSET_ARRAY2 offsets headerOffset ITM_V10_HEAD_EFFECTS
        PHP_EACH offsets AS _ => offset BEGIN
            READ_SHORT offset opcode

            PATCH_IF opcode == 147 BEGIN
                READ_ASCII (offset + 0x14) resref

                PATCH_IF FILE_EXISTS_IN_GAME ~%resref%.spl~ BEGIN
                    INNER_PATCH_FILE ~%resref%.spl~ BEGIN
                        READ_SHORT 0x1c spellType
                        READ_BYTE  0x25 spellSchool
                        READ_LONG  0x34 spell_level

                        PATCH_IF spellType == 1 BEGIN
                            SET found = 1
                            SPRINT spell_school $spell_schools(~%spellSchool%~)
                        END
                    END
                END
            END
        END
    END
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY ~ability_scores~ BEGIN
    ~str~ => ~strength~
    ~int~ => ~intelligence~
    ~wis~ => ~wisdom~
    ~dex~ => ~dexterity~
    ~con~ => ~constitution~
    ~cha~ => ~charisma~
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY ~target_group_categories~ BEGIN
    ~2hd~ => ~itm~
    ~alg~ => ~cre~
    ~are~ => ~~
    ~arm~ => ~itm~
    ~cat~ => ~itm~
    ~cha~ => ~cre~
    ~cls~ => ~cre~
    ~con~ => ~cre~
    ~cre~ => ~cre~
    ~dex~ => ~cre~
    ~gen~ => ~cre~
    ~gnd~ => ~cre~
    ~grp~ => ~~
    ~igr~ => ~itm~
    ~ilv~ => ~itm~
    ~int~ => ~cre~
    ~itm~ => ~itm~
    ~kit~ => ~cre~
    ~lvl~ => ~cre~
    ~prc~ => ~sto~
    ~prf~ => ~cre~
    ~rce~ => ~cre~
    ~scl~ => ~itm~
    ~slt~ => ~itm~
    ~spc~ => ~cre~
    ~sto~ => ~sto~
    ~str~ => ~cre~
    ~wis~ => ~cre~
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY ~item_slots~ BEGIN
     0 => ~helmet~
     1 => ~armor~
     2 => ~shield~
     3 => ~gloves~
     4 => ~left_ring~
     5 => ~right_ring~
     6 => ~amulet~
     7 => ~belt~
     8 => ~boots~
     9 => ~weapon1~
    10 => ~weapon2~
    11 => ~weapon3~
    12 => ~weapon4~
    13 => ~quiver1~
    14 => ~quiver2~
    15 => ~quiver3~
    16 => ~quiver4~
    17 => ~cloak~
    18 => ~quick_item1~
    19 => ~quick_item2~
    20 => ~quick_item3~
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY ~cre_item_slots~ BEGIN
     0 => ~helmet~
     1 => ~armor~
     2 => ~shield~
     3 => ~gloves~
     4 => ~ring~
     5 => ~ring~
     6 => ~amulet~
     7 => ~belt~
     8 => ~boots~
     9 => ~weapon~
    10 => ~weapon~
    11 => ~weapon~
    12 => ~weapon~
    13 => ~quiver~
    14 => ~quiver~
    15 => ~quiver~
    16 => ~quiver~
    17 => ~cloak~
    18 => ~qitem~
    19 => ~qitem~
    20 => ~qitem~
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY ~store_types~ BEGIN
    0 => ~store~
    1 => ~tavern~
    2 => ~inn~
    3 => ~temple~
    5 => ~container~
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY ~spell_schools~ BEGIN
    0 => ~none~
    1 => ~abjuration~
    2 => ~conjuration~
    3 => ~divination~
    4 => ~enchantment~
    5 => ~illusion~
    6 => ~evocation~
    7 => ~necromancy~
    8 => ~alteration~
    9 => ~generalist~
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY ~spell_types~ BEGIN
    0 => ~special~
    1 => ~wizard~
    2 => ~divine~
    3 => ~psionic~
    4 => ~innate~
    5 => ~song~
    6 => ~priest~
    7 => ~druid~
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY ~item_category_to_item_slot~ BEGIN
	// 0     // Misc
	1 => 6	 // Amulets and necklaces
	2 => 1	 // Armor
	3 => 7	 // Belts and girdles
	4 => 8	 // Boots
	5 => 13	 // Arrows
	6 => 3	 // Bracers and gauntlets
	7 => 0	 // Headgear
    // 8     // Keys
	9 => 18	 // Potions
	10 => 4	 // Rings
	11 => 18 // Scrolls
	12 => 2	 // Shields
	// 13    // Food
	14 => 13 // Bullets
	15 => 9	 // Bows
	16 => 9	 // Daggers
	17 => 9	 // Maces
	18 => 9	 // Slings
	19 => 9	 // Small swords
	20 => 9	 // Large swords
	21 => 9	 // Hammers
	22 => 9	 // Morning stars
	23 => 9	 // Flails
	24 => 9	 // Darts
	25 => 9	 // Axes
	26 => 9	 // Quarterstaff
	27 => 9	 // Crossbow
	28 => 9	 // Hand-to-hand weapons
	29 => 9	 // Spears
	30 => 9	 // Halberds
	31 => 13 // Crossbow bolts
	32 => 17 // Cloaks
	// 33    // Gold
	// 34    // Gems
	35 => 18 // Wands
	// 36    // Container
	// 37    // Books
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY ~item_category_to_item_slot_limit~ BEGIN
	5  => 16 // quiver
	9  => 20 // quick item
	10 => 5  // ring
	11 => 20 // quick item
	14 => 18 // quiver
	15 => 12 // weapon
	16 => 12 // weapon
	17 => 12 // weapon
	18 => 12 // weapon
	19 => 12 // weapon
	20 => 12 // weapon
	21 => 12 // weapon
	22 => 12 // weapon
	23 => 12 // weapon
	24 => 12 // weapon
	25 => 12 // weapon
	26 => 12 // weapon
	27 => 12 // weapon
	28 => 12 // weapon
	29 => 12 // weapon
	30 => 12 // weapon
	31 => 15 // quiver
END