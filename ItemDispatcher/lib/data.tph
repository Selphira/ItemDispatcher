DEFINE_ACTION_MACRO ~data#load~
BEGIN
    PRINT ~Chargement des créatures...~ SILENT
    LAM ~data#load#creatures~
    PRINT ~Chargement des objets...~ SILENT
    LAM ~data#load#items~
    PRINT ~Chargement des magasins...~ SILENT
    //LAM ~data#load#stores~
END

/*
 * Crée des tableaux pour chaque type de filtre supporté à partir des données des créatures du jeu.
 *
 * Tableau contenant le nombre de créatures correspondant au filtre
 * - $group_count(~group_cre_all~)
 * - $group_count(~group_cre_kit_%kit_name%~)
 * - $group_count(~group_cre_general_%general_name%~)
 * - $group_count(~group_cre_race_%race_name%~)
 * - $group_count(~group_cre_class_%class_name%~)
 * - $group_count(~group_cre_specific_%specific_name%~)
 * - $group_count(~group_cre_gender_%gender_name%~)
 * - $group_count(~group_cre_alignment_%alignment_name%~)
 * - $group_count(~group_cre_level_%level%~)
 *
 * Tableau contenant la liste des créatures correspondant au filtre
 * - $group_cre_all(~%creature%~) = 1
 * - $~group_cre_kit_%kit_name%~(~%creature%~) = 1
 * - $~group_cre_general_%general_name%~(~%creature%~) = 1
 * - $~group_cre_race_%race_name%~(~%creature%~) = 1
 * - $~group_cre_class_%class_name%~(~%creature%~) = 1
 * - $~group_cre_specific_%specific_name%~(~%creature%~) = 1
 * - $~group_cre_gender_%gender_name%~(~%creature%~) = 1
 * - $~group_cre_alignment_%alignment_name%~(~%creature%~) = 1
 * - $~group_cre_level_%level%~(~%creature%~) = 1
 *
 * Liste des emplacements occupés par un objet non droppable ou qui ne devrait pas être déplacé/remplacé
 * - $~cre_locked_slot_%slot_name%~(~%creature%~)
 *
 * Liste des emplacements d'inventaire vides de chaque créature
 * - $empty_inventory_slots(~%creature%~)
 */
DEFINE_ACTION_MACRO ~data#load#creatures~
BEGIN
    LAF ~data#load#ids~ STR_VAR file = ~kit~      group = ~cre_kit~         RET_ARRAY group_count END
    LAF ~data#load#ids~ STR_VAR file = ~general~  group = ~cre_general~     RET_ARRAY group_count END
    LAF ~data#load#ids~ STR_VAR file = ~race~     group = ~cre_race~        RET_ARRAY group_count END
    LAF ~data#load#ids~ STR_VAR file = ~class~    group = ~cre_class~       RET_ARRAY group_count END
    LAF ~data#load#ids~ STR_VAR file = ~specific~ group = ~cre_specific~    RET_ARRAY group_count END
    LAF ~data#load#ids~ STR_VAR file = ~gender~   group = ~cre_gender~      RET_ARRAY group_count END
    LAF ~data#load#ids~ STR_VAR file = ~alignmen~ group = ~cre_alignment~   RET_ARRAY group_count END
    LAF ~data#load#ids~ STR_VAR file = ~wprof~    group = ~cre_proficiency~ RET_ARRAY group_count END
    LAF ~data#load#levels~ RET_ARRAY group_count END

    OUTER_SET $group_count(~group_cre_all~) = 0

	COPY_EXISTING_REGEXP GLOB ~^.+\.cre$~ ~override~
	    SPRINT ~creature~ ~%SOURCE_FILE%~
	    TO_LOWER creature

        LPM ~data#load#creatures#data~
        LPM ~data#load#creatures#slots~
        LPM ~data#load#creatures#proficiencies~
	BUT_ONLY
END

DEFINE_PATCH_MACRO ~data#load#creatures#data~
BEGIN
    READ_BYTE  0x234 level
    READ_SHORT 0x246 kit
    READ_BYTE  0x271 general
    READ_BYTE  0x272 race
    READ_BYTE  0x273 class
    READ_BYTE  0x274 specific
    READ_BYTE  0x275 gender
    READ_BYTE  0x27b alignment

    LOOKUP_IDS_SYMBOL_OF_INT kit_name ~kit~ kit
    LOOKUP_IDS_SYMBOL_OF_INT general_name ~general~ general
    LOOKUP_IDS_SYMBOL_OF_INT race_name ~race~ race
    LOOKUP_IDS_SYMBOL_OF_INT class_name ~class~ class
    LOOKUP_IDS_SYMBOL_OF_INT specific_name ~specific~ specific
    LOOKUP_IDS_SYMBOL_OF_INT gender_name ~gender~ gender
    LOOKUP_IDS_SYMBOL_OF_INT alignment_name ~alignmen~ alignment

    TO_LOWER kit_name
    TO_LOWER general_name
    TO_LOWER race_name
    TO_LOWER class_name
    TO_LOWER specific_name
    TO_LOWER gender_name
    TO_LOWER alignment_name

    PATCH_IF NOT VARIABLE_IS_SET $group_count(~group_cre_kit_%kit_name%~) BEGIN
        PATCH_IF kit != 0 BEGIN
            LPF ~log#add_warning~ STR_VAR message = ~%creature% : Invalid kit value (%kit%)~ END
        END
        SPRINT ~kit_name~ ~none~
    END

    PATCH_IF NOT VARIABLE_IS_SET $group_count(~group_cre_general_%general_name%~) BEGIN
        PATCH_IF general != 0 BEGIN
            LPF ~log#add_warning~ STR_VAR message = ~%creature% : Invalid general value (%general%)~ END
        END
        SPRINT ~general_name~ ~none~
    END

    PATCH_IF NOT VARIABLE_IS_SET $group_count(~group_cre_race_%race_name%~) BEGIN
        PATCH_IF race != 0 BEGIN
            LPF ~log#add_warning~ STR_VAR message = ~%creature% : Invalid race value (%race%)~ END
        END
        SPRINT ~race_name~ ~none~
    END

    PATCH_IF NOT VARIABLE_IS_SET $group_count(~group_cre_class_%class_name%~) BEGIN
        PATCH_IF class != 0 BEGIN
            LPF ~log#add_warning~ STR_VAR message = ~%creature% : Invalid class value (%class%)~ END
        END
        SPRINT ~class_name~ ~none~
    END

    PATCH_IF NOT VARIABLE_IS_SET $group_count(~group_cre_specific_%specific_name%~) BEGIN
        PATCH_IF specific != 0 BEGIN
            LPF ~log#add_warning~ STR_VAR message = ~%creature% : Invalid specific value (%specific%)~ END
        END
        SPRINT ~specific_name~ ~none~
    END

    PATCH_IF NOT VARIABLE_IS_SET $group_count(~group_cre_gender_%gender_name%~) BEGIN
        PATCH_IF gender != 0 BEGIN
            LPF ~log#add_warning~ STR_VAR message = ~%creature% : Invalid gender value (%gender%)~ END
        END
        SPRINT ~gender_name~ ~none~
    END

    PATCH_IF NOT VARIABLE_IS_SET $group_count(~group_cre_alignment_%alignment_name%~) BEGIN
        PATCH_IF alignment != 0 BEGIN
            LPF ~log#add_warning~ STR_VAR message = ~%creature% : Invalid alignment value (%alignment%)~ END
        END
        SPRINT ~alignment_name~ ~none~
    END

    SET $group_cre_all(~%creature%~) = 1
    SET $group_count(~group_cre_all~) += 1

    SET $~group_cre_kit_%kit_name%~(~%creature%~) = 1
    SET $group_count(~group_cre_kit_%kit_name%~) += 1

    SET $~group_cre_general_%general_name%~(~%creature%~) = 1
    SET $group_count(~group_cre_general_%general_name%~) += 1

    SET $~group_cre_race_%race_name%~(~%creature%~) = 1
    SET $group_count(~group_cre_race_%race_name%~) += 1

    SET $~group_cre_class_%class_name%~(~%creature%~) = 1
    SET $group_count(~group_cre_class_%class_name%~) += 1

    SET $~group_cre_specific_%specific_name%~(~%creature%~) = 1
    SET $group_count(~group_cre_specific_%specific_name%~) += 1

    SET $~group_cre_gender_%gender_name%~(~%creature%~) = 1
    SET $group_count(~group_cre_gender_%gender_name%~) += 1

    SET $~group_cre_alignment_%alignment_name%~(~%creature%~) = 1
    SET $group_count(~group_cre_alignment_%alignment_name%~) += 1

    SET $~group_cre_level_%level%~(~%creature%~) = 1
    SET $group_count(~group_cre_level_%level%~) += 1
END

DEFINE_PATCH_MACRO ~data#load#creatures#slots~
BEGIN
    READ_LONG  0x2b8 slot_offset
    READ_LONG  0x2bc item_offset

    PATCH_PHP_EACH ~item_slots~ AS offset => slot_name BEGIN
        READ_SHORT (%slot_offset% + (%offset% * 0x02)) slot
        PATCH_IF (%slot% != 0xffff) BEGIN
            READ_ASCII (item_offset + (slot * 0x14)) resref
            READ_LONG  (item_offset + (slot * 0x14) + 0x10) creItemFlags

            SET droppable = (creItemFlags BAND BIT3) == 0

            PATCH_IF droppable BEGIN
                INNER_ACTION BEGIN
                    ACTION_IF FILE_EXISTS_IN_GAME ~%resref%.itm~ BEGIN
                        COPY_EXISTING ~%resref%.itm~ ~~
                            READ_SHORT  0x18 itemFlags
                            READ_STRREF 0x50 originalUnidentifiedDescription
                            READ_LONG   0x50 originalUnidentifiedDescriptionRef
                            READ_STRREF 0x54 originalDescription
                            READ_LONG   0x54 originalDescriptionRef

                            SET droppable = (itemFlags BAND BIT2) != 0
                            PATCH_IF droppable AND (~%originalDescription%~ STRING_EQUAL ~~ OR originalDescriptionRef <= 0) AND (~%originalUnidentifiedDescription%~ STRING_EQUAL ~~ OR originalUnidentifiedDescriptionRef <= 0) BEGIN
                                SET droppable = 0
                            END
                        BUT_ONLY
                    END
                END
            END

            PATCH_IF NOT droppable BEGIN
                SET $~cre_locked_slot_%slot_name%~(~%creature%~) = 1
            END
        END
    END

    SET empty_inventory_slots = 16
    FOR (offset = 1; offset <= 16; ++offset) BEGIN
        READ_SHORT (%slot_offset% + ((%offset% + 20) * 0x02)) slot
        PATCH_IF (%slot% != 0xffff) BEGIN
            SET empty_inventory_slots -= 1
        END
    END
    SET $empty_inventory_slots(~%creature%~) = empty_inventory_slots
END

DEFINE_PATCH_MACRO ~data#load#creatures#proficiencies~
BEGIN
    READ_BYTE 0x33  version
    READ_LONG 0x2c4 effect_offset
    READ_LONG 0x2c8 effect_count
    FOR (index = 0 ; index < effect_count ; ++index) BEGIN
        SET index_offset = effect_offset + ((0x30 + (version * 0xd8)) * index)
        READ_SHORT ((version * 0x08) + index_offset + 0x00) opcode
        PATCH_IF opcode = 233 BEGIN
            READ_SHORT ((version * 0x10) + index_offset + 0x04) stars
            READ_SHORT ((version * 0x10) + index_offset + 0x08) proficiency

            LOOKUP_IDS_SYMBOL_OF_INT proficiency_name ~wprof~ proficiency
            TO_LOWER proficiency_name

            PATCH_IF VARIABLE_IS_SET $group_count(~group_cre_proficiency_%proficiency_name%~) BEGIN
                SET $~group_cre_proficiency_%proficiency_name%~(~%creature%~) = stars
                SET $group_count(~group_cre_proficiency_%proficiency_name%~) += 1
            END
        END
    END
    // TODO: Si la créature n'a aucune compétence martiale, l'ajouter dans un tableau qui l'indique
END

/*
 * Crée des tableaux pour chaque type de filtre supporté à partir des données des objets du jeu.
 *
 * Tableau contenant le nombre d'objets correspondant au filtre
 * - $group_count(~group_itm_armor_type_%armor_type%~)
 * - $group_count(~group_itm_category_%category_name%~)
 * - $group_count(~group_itm_cursed~)
 * - $group_count(~group_itm_enchantment_%enchantment%~)
 * - $group_count(~group_itm_magical~)
 * - $group_count(~group_itm_two_handed~)
 *
 * Tableau contenant la liste d'objets correspondant au filtre
 * - $~group_itm_armor_type_%armor_type%~(~%item%~) = 1
 * - $~group_itm_category_%category_name%~(~%item%~) = 1
 * - $~group_itm_enchantment_%enchantment%~(~%item%~) = 1
 * - $group_itm_cursed(~%item%~) = 1
 * - $group_itm_magical(~%item%~) = 1
 * - $group_itm_two_handed(~%item%~) = 1
 */
DEFINE_ACTION_MACRO ~data#load#items~
BEGIN
    LAF ~data#load#ids~ STR_VAR file = ~itemcat~ group = ~itm_category~ RET_ARRAY group_count END
    LAF ~data#load#armor_types~  RET_ARRAY group_count END
    LAF ~data#load#enchantments~ RET_ARRAY group_count END

    OUTER_SET $group_count(~group_itm_all~)        = 0
    OUTER_SET $group_count(~group_itm_cursed~)     = 0
    OUTER_SET $group_count(~group_itm_magical~)    = 0
    OUTER_SET $group_count(~group_itm_two_handed~) = 0

	COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
	    SPRINT ~item~ ~%SOURCE_FILE%~
	    TO_LOWER item

		READ_LONG  0x18 flags
		READ_SHORT 0x1c category
		READ_ASCII 0x22 animation (2)
		READ_SHORT 0x60 enchantment

		LOOKUP_IDS_SYMBOL_OF_INT category_name ~itemcat~ category

        TO_LOWER category_name

		LPF ~data#load#armor_type~ STR_VAR animation RET armor_type END
        LPF ~data#load#is_weapon~ STR_VAR category RET is_weapon END

		SET twohanded = (flags BAND BIT1) != 0
		SET cursed    = (flags BAND BIT4) != 0
		SET magical   = (flags BAND BIT6) != 0

        SET $group_itm_all(~%item%~) = 1
        SET $group_count(~group_itm_all~) += 1

        PATCH_IF NOT ~%armor_type%~ STRING_EQUAL ~~ BEGIN
            SET $~group_itm_armor_type_%armor_type%~(~%item%~) = 1
            SET $group_count(~group_itm_armor_type_%armor_type%~) += 1
        END

        PATCH_IF VARIABLE_IS_SET $group_count(~group_itm_category_%category_name%~) BEGIN
            SET $~group_itm_category_%category_name%~(~%item%~) = 1
            SET $group_count(~group_itm_category_%category_name%~) += 1
        END

        PATCH_IF magical == 1 BEGIN
            SET $group_itm_magical(~%item%~) = 1
            SET $group_count(~group_itm_magical~) += 1
        END

        PATCH_IF cursed == 1 BEGIN
            SET $group_itm_cursed(~%item%~) = 1
            SET $group_count(~group_itm_cursed~) += 1
        END

        PATCH_IF enchantment >= 0 AND enchantment <= 6 BEGIN
            SET $~group_itm_enchantment_%enchantment%~(~%item%~) = 1
            SET $group_count(~group_itm_enchantment_%enchantment%~) += 1
        END

        PATCH_IF is_weapon AND twohanded == 1 BEGIN
            SET $group_itm_two_handed(~%item%~) = 1
            SET $group_count(~group_itm_two_handed~) += 1
        END
	BUT_ONLY
END

DEFINE_ACTION_FUNCTION ~data#load#ids~
    STR_VAR
        file = ~~
        group = ~~
    RET_ARRAY
        group_count
BEGIN
    COPY_EXISTING ~%file%.ids~ ~override~
        READ_2DA_ENTRIES_NOW ~rows~ 2

        SET $group_count(~group_%group%_none~) = 0

        FOR (row = 0; row < rows; ++row) BEGIN
            READ_2DA_ENTRY_FORMER ~rows~ row 0 id
            READ_2DA_ENTRY_FORMER ~rows~ row 1 name

		    TO_LOWER name

            PATCH_IF NOT (~%id%~ STRING_EQUAL ~IDS~ OR ~%name%~ STRING_EQUAL ~~) BEGIN
                SET $group_count(~group_%group%_%name%~) = 0
            END
        END
    BUT_ONLY
END

DEFINE_ACTION_FUNCTION ~data#load#levels~
    RET_ARRAY
        group_count
BEGIN
    OUTER_FOR (level = 0; level < 50; ++level) BEGIN
        OUTER_SET $group_count(~group_cre_level_%level%~) = 0
    END
END

DEFINE_ACTION_FUNCTION ~data#load#armor_types~
    RET_ARRAY
        group_count
BEGIN
    ACTION_FOR_EACH armor_type IN ~robe~ ~leather~ ~chainmail~ ~platemail~ ~buckler~ ~small_shield~ ~medium_shield~ ~large_shield~ BEGIN
        OUTER_SET $group_count(~group_itm_armor_type_%armor_type%~) = 0
    END
END

DEFINE_ACTION_FUNCTION ~data#load#enchantments~
    RET_ARRAY
        group_count
BEGIN
    OUTER_FOR (enchantment = 0; enchantment <= 6; ++enchantment) BEGIN
        OUTER_SET $group_count(~group_itm_enchantment_%enchantment%~) = 0
    END
END

DEFINE_PATCH_FUNCTION ~data#load#armor_type~
    STR_VAR
        animation = ~~
    RET
        armor_type
BEGIN
    PATCH_MATCH ~%animation%~
    WITH
        ~2W~ ~3W~ ~4W~ BEGIN SPRINT ~armor_type~ ~robe~ END
        ~2A~   BEGIN SPRINT ~armor_type~ ~leather~ END
        ~3A~   BEGIN SPRINT ~armor_type~ ~chainmail~ END
        ~4A~   BEGIN SPRINT ~armor_type~ ~platemail~ END
        ~D1~   BEGIN SPRINT ~armor_type~ ~buckler~ END
        ~D2~   BEGIN SPRINT ~armor_type~ ~small_shield~ END
        ~D3~   BEGIN SPRINT ~armor_type~ ~medium_shield~ END
        ~D4~   BEGIN SPRINT ~armor_type~ ~large_shield~ END
        DEFAULT SPRINT ~armor_type~ ~~
    END
END

DEFINE_PATCH_FUNCTION ~data#load#is_weapon~
    INT_VAR
        category = 0
    RET
        is_weapon
BEGIN
    SET is_weapon = (category >= 0xf AND category <= 0x1e)
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY ~target_group_categories~ BEGIN
    ~cre~ => ~cre~
    ~rce~ => ~cre~
    ~cls~ => ~cre~
    ~kit~ => ~cre~
    ~gnd~ => ~cre~
    ~alg~ => ~cre~
    ~gen~ => ~cre~
    ~spc~ => ~cre~
    ~lvl~ => ~cre~
    ~itm~ => ~itm~
    ~2hd~ => ~itm~
    ~arm~ => ~itm~
    ~cat~ => ~itm~
    ~ilv~ => ~itm~
    ~mgr~ => ~itm~
    ~grp~ => ~~
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY ~item_slots~ BEGIN
     0 => ~helmet~
     1 => ~armor~
     2 => ~shield~
     3 => ~gloves~
     4 => ~left_ring~
     5 => ~right_ring~
     6 => ~amulet~
     7 => ~belt~
     8 => ~boots~
     9 => ~weapon1~
    10 => ~weapon2~
    11 => ~weapon3~
    12 => ~weapon4~
    13 => ~quiver1~
    14 => ~quiver2~
    15 => ~quiver3~
    16 => ~quiver4~
    17 => ~cloak~
    18 => ~quick_item1~
    19 => ~quick_item2~
    20 => ~quick_item3~
END